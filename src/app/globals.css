@tailwind base;
@tailwind components;
@tailwind utilities;

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
}
/*
  Typographic tweaks!
  3. Add accessible line-height
  4. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
  5. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*
  6. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}
/*
  7. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
  8. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

@layer base {
  :root {

    --background: 10 10 27;
    --background-surface: 20 20 47;


    --surface-border: 30 30 69;

    --foreground: 203 213 225;
    --foreground-muted: 148 163 184;
    --foreground-highlight: 255 255 255;

    --action: 110 220 252;

    --callout-info: 110 220 252;



    --shadow-dense: rgba(0, 0, 0, 0.07) 0px -1px 1px,
        rgba(0, 0, 0, 0.14) 0px 1px 1px,
        rgba(0, 0, 0, 0.07) 0px 2px 2px, 
        rgba(0, 0, 0, 0.07) 0px 4px 4px, 
        rgba(0, 0, 0, 0.07) 0px 8px 8px;

    --shadow-sharp: rgba(0, 0, 0, 0.07) 0px -1px 1px,
        rgba(0, 0, 0, 0.14) 0px 1px 1px,
        rgba(0, 0, 0, 0.07) 0px 2px 2px, 
        rgba(0, 0, 0, 0.07) 0px 4px 4px;

    --shadow-inner-shine: 0px 1px 0px 0px hsla(0,0%,100%,.03) inset, 
        0px 0px 0px 1px hsla(0,0%,100%,.03) inset, 
        0px 0px 0px 1px rgba(0,0,0,.1), 
        0px 2px 2px 0px rgba(0,0,0,.1), 
        0px 4px 4px 0px rgba(0,0,0,.1), 
        0px 8px 8px 0px rgba(0,0,0,.1), var(--shadow-dense);

    /*
    *  not sure why the /.5 works here, that should send it out of bounds, src: joebell.studio
    * @see: https://joebell.studio/
    */
    --shadow-sheen: 0 -1px 0 rgb(180, 197, 202), 
        0 0 0 1px rgba(180, 197, 202, 0.5), 
        var(--shadow-dense);
  }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@layer components {
  .sheen-ring {
    --width: 1px;
    --upper-ring-color: 180 197 202;
    --base-color: rgb(var(--upper-ring-color) / 0.5);

    --tw-ring-shadow: 0 0 0 var(--width) var(--base-color);
    --upper-ring: 0 -1px 0 rgb(var(--upper-ring-color));
 
      box-shadow: var(--upper-ring), var(--tw-ring-shadow), var(--shadow-dense);
  }
}

details summary .arrow-icon {
  transition: transform 0.225s ease;
}

/* Rotate arrow when <details> is open */
details[open] summary .arrow-icon {
  transform: rotate(90deg);
}

/* Custom scrollbar for all WebKit browsers */
::-webkit-scrollbar {
  height: 8px;
  width: 8px;
  padding: 4px;
}

::-webkit-scrollbar-thumb {
  background-color: lightgrey;
  border-radius: 4px;
}

@media (prefers-color-scheme: dark) {
  ::-webkit-scrollbar-thumb {
    background-color: rgba(87, 53, 87, 0.6);
  }
}


  /* 
  * We are using rehypye-pretty to style the code blocks in the project.
  * rehype-pretty-code is a Rehype plugin powered by the shiki syntax highlighter that provides beautiful code blocks for Markdown or MDX. 
  * It works on both the server at build-time (avoiding runtime syntax highlighting) and on the client for dynamic highlighting.
  * @see: https://rehype-pretty.pages.dev/
  */

  /* 
  * Here we are setting up the styles needed to enable theme-aware code blocks.
  * @see: https://rehype-pretty.pages.dev/#multiple-themes-dark-and-light-mode
  */

  html {
    code[data-theme*=" "],
    code[data-theme*=" "] span {
      color: var(--shiki-light);
      background-color: var(--shiki-light-bg);
    }

    &.dark {
      code[data-theme*=" "],
      code[data-theme*=" "] span {
        color: var(--shiki-dark);
        background-color: var(--shiki-dark-bg);
      }
    }
  }

  /* 
  * Here we are setting up the styles needed to enable line numbers in code blocks.
  * @see: https://rehype-pretty.pages.dev/#line-numbers
  */

  html {
    code[data-line-numbers] {
      counter-reset: line;
    }

    code[data-line-numbers] > [data-line]::before {
      display: inline-block;
      width: 12px;
      margin-right: 2rem;
      color: gray;
      text-align: right;
      content: counter(line);
      counter-increment: line;
    }

    code[data-line-numbers-max-digits="2"] > [data-line]::before {
      width: 1.25rem;
    }

    code[data-line-numbers-max-digits="3"] > [data-line]::before {
      width: 1.75rem;
    }

    code[data-line-numbers-max-digits="4"] > [data-line]::before {
      width: 2.25rem;
    }

    p [data-line] {
      padding: 2px 4px;
      margin-right: 2px;
      margin-left: 2px;
      text-align: center;
      background-color: var(--kbd-background) !important;
      border-radius: 4px;
      box-shadow: 0 0 0 1px var(--kbd-border);
    }
  }

  /* 
  * Here we are just some additional styles to make the code blocks look better.
  * @see: https://rehype-pretty.pages.dev/#styles
  */

  * {
    pre {
      padding: 16px;
      overflow-x: auto;
      font-size: 14px;
      background-color: rgb(var(--background-surface));
      [data-line] {
        margin-top: 0 !important;
      }
    }

    figure {
      width: 100%;
      margin: theme('spacing.2') 0 theme('spacing.10') 0;
      border: 1px solid rgb(var(--surface-border));
      border-radius: theme('borderRadius.md');
    }
}

/* Home screen animation */
@keyframes fade-in-anim {
  from {
    opacity: 0;
    transform: translateY(40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in-home {
  animation: fade-in-anim 375ms ease both;
  --delay: 40ms;
  animation-delay: calc(var(--delay) * var(--animation-order));
 
}

/* Hide scrollbar for Chrome, Safari and Opera */
.no-scrollbar::-webkit-scrollbar {
  display: none;
}
/* Hide scrollbar for IE, Edge and Firefox */
.no-scrollbar {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}
